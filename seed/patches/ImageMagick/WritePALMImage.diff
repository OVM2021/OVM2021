diff --git a/coders/palm.c b/coders/palm.c
@@ -904,10 +904,10 @@ static MagickBooleanType WritePALMImage(const ImageInfo *image_info, Image *image,ExceptionInfo *exception) 
      if (bits_per_pixel == 16)
        {    
          for (x=0; x < (ssize_t) image->columns; x++) 
          {    
-            color16=(unsigned short) ((((31*(size_t) GetPixelRed(image,p))/
-              (size_t) QuantumRange) << 11) | (((63*(size_t)
-              GetPixelGreen(image,p))/(size_t) QuantumRange) << 5) | 
-              ((31*(size_t) GetPixelBlue(image,p))/(size_t) QuantumRange));
+            color16=(unsigned short) ((((31*(ssize_t) GetPixelRed(image,p))/
+              (ssize_t) QuantumRange) << 11) | (((63*(ssize_t)
+              GetPixelGreen(image,p))/(ssize_t) QuantumRange) << 5) |
+              ((31*(ssize_t) GetPixelBlue(image,p))/(ssize_t) QuantumRange));
            if (GetPixelAlpha(image,p) == (Quantum) TransparentAlpha)
              {    
                transpix.red=(MagickRealType) GetPixelRed(image,p);
                transpix.green=(MagickRealType) GetPixelGreen(image,p);
                transpix.blue=(MagickRealType) GetPixelBlue(image,p);
                transpix.alpha=(MagickRealType) GetPixelAlpha(image,p);
                flags|=PALM_HAS_TRANSPARENCY_FLAG;
              }    
            *ptr++=(unsigned char) ((color16 >> 8) & 0xff);
            *ptr++=(unsigned char) (color16 & 0xff);
            p+=GetPixelChannels(image);
          }    
        }    
